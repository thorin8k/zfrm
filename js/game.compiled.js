
STATUS_IDDLE='iddle';STATUS_RUNNING='running';STATUS_STOPPED='stopped';;var CollisionUtils=Class.extend({getCollisionSide:function(obj1,obj2,reverse){var axis=this.getCollisionAxis(obj1,obj2);if(axis.x!=0||axis.y!=0){if(axis.x!=0){if(axis.x>0){if(!reverse){return'left';}else{return'right';}}
if(axis.x<0){if(!reverse){return'right';}else{return'left';}}}else if(axis.y!=0){if(axis.y>0){if(!reverse){return'top';}else{return'bottom';}}
if(axis.y<0){if(!reverse){return'bottom';}else{return'top';}}}}
return null;},isPointInRect:function(x,y,x2,y2,height,width){var t1=(x>=x2&&x<=x2+width);var t2=(y>=y2&&y<=y2+height);return t1&&t2;},valueInRange:function(value,min,max){return(value<=max)&&(value>=min);},rectCollideRect:function(obj1,obj2){var xOverlap=this.valueInRange(obj1.x,obj2.x,obj2.x+obj2.width)||this.valueInRange(obj2.x,obj1.x,obj1.x+obj1.width);var yOverlap=this.valueInRange(obj1.y,obj2.y,obj2.y+obj2.height)||this.valueInRange(obj2.y,obj1.y,obj1.y+obj1.height);return xOverlap&&yOverlap;},circleCollideRect:function(obj1,obj2){var testX=obj1.x;var testY=obj1.y;if(testX<obj2.x)
testX=obj2.x;if(testX>(obj2.x+obj2.width))
testX=(obj2.x+obj2.width);if(testY<obj2.y)
testY=obj2.y;if(testY>(obj2.y+obj2.height))
testY=(obj2.y+obj2.height);return((obj1.x-testX)*(obj1.x-testX)+(obj1.y-testY)*(obj1.y-testY))<obj1.radius*obj1.radius;},circleCollideCircle:function(obj1,obj2){var dx=obj2.x-obj1.x,dy=obj2.y-obj1.y,dist=Math.sqrt(dx*dx+dy*dy);if(dist<=obj1.radius+obj2.radius){return true;}
return false;},getCollisionAxis:function(obj1,obj2){var px=0,py=0,o1hWidth=(obj1.width/2),o1hHeight=(obj1.height/2),o2hWidth=(obj2.width/2),o2hHeight=(obj2.height/2);if(obj1.collisionType==='Circle'){o1hWidth=0,o1hHeight=0;}
if(obj2.collisionType==='Circle'){o2hWidth=0,o2hHeight=0;}
var dx=obj1.x+o1hWidth-obj2.x-o2hWidth,dy=obj1.y+o1hHeight-obj2.y-o2hHeight;px=(o2hWidth+o1hWidth)-(dx<0?-dx:dx);py=(o2hHeight+o1hHeight)-(dy<0?-dy:dy);if(px<py){py=0;px=dx<0?-px:px;}else{px=0;py=dy<0?-py:py;}
return{x:px,y:py};}});function cleanArray(actual){var newArray=new Array();for(var i=0;i<actual.length;i++){if(actual[i]){newArray.push(actual[i]);}}
return newArray;}
function isInArray(array,index){for(var key in array){if(array[key]===index){return key;}}
return 0;};var LayerList=Class.extend({layerList:[],layersToRemove:[],queueList:[],tools:null,init:function(tools){this.tools=tools;},count:function(){return this.layerList.length;},getList:function(){return this.layerList;},getItemByIdx:function(idx){return this.layerList[idx];},getItem:function(sId){if(typeof sId==='string'){var nObjectCount=0;var oCurrentGameObject=null;var objListLength=this.layerList.length;for(nObjectCount=0;nObjectCount<objListLength;nObjectCount+=1){oCurrentGameObject=this.layerList[nObjectCount];if(oCurrentGameObject.__id===sId){return oCurrentGameObject;}}}
return null;},addItem:function(sObjectId,object){var exists=this.getItem(sObjectId);if(exists===null){object.__id=sObjectId;this.layerList.push(object);if(this.tools.game.status===STATUS_RUNNING){if(object['callObjectMethods']){object.callObjectMethods("start",this.tools);}}}else{if(exists.mergeWith){exists.mergeWith(object);}}},getItemIdx:function(sId){if(typeof sObjectId==='string'){var nObjectCount=0;var oCurrentGameObject=null;var objListLength=this.count();for(nObjectCount=0;nObjectCount<objListLength;nObjectCount+=1){oCurrentGameObject=this.getItemByIdx(nObjectCount);if(oCurrentGameObject.__id===sId){return nObjectCount;}}}
return null;},removeItem:function(sId){if(typeof sId==='string'){var oCurrentGameObject=null;var nObjectCount=0;var nGameObjectsLength=this.count();for(nObjectCount=0;nObjectCount<nGameObjectsLength;nObjectCount+=1){oCurrentGameObject=this.getItemByIdx(nObjectCount);if(oCurrentGameObject.__id===sId){this.layersToRemove.push(nObjectCount);}}}},clearRemoveds:function(){var nRemoveLength=this.layersToRemove.length;var nCount=0;var nCurrentObject=0;for(nCount=0;nCount<nRemoveLength;nCount+=1){nCurrentObject=this.layersToRemove[nCount];delete this.layerList[nCurrentObject];}
this.layerList=cleanArray(this.layerList);this.layersToRemove=[];var oCurrentGameObject=null;var nObjectCount=0;var nGameObjectsLength=this.layerList.length;for(nObjectCount=0;nObjectCount<nGameObjectsLength;nObjectCount+=1){oCurrentGameObject=this.layerList[nObjectCount];if(oCurrentGameObject.objsToRemove){nRemoveLength=oCurrentGameObject.objsToRemove.length;nCount=0;nCurrentObject=0;for(nCount=0;nCount<nRemoveLength;nCount+=1){nCurrentObject=oCurrentGameObject.objsToRemove[nCount];delete oCurrentGameObject.objList[nCurrentObject];}
oCurrentGameObject.objList=cleanArray(oCurrentGameObject.objList);oCurrentGameObject.objsToRemove=[];}}},sort:function(sortFn){this.layerList.sort(sortFn);},addToQueue:function(sObjectId,object){if(typeof object==='object'){object.__id=sObjectId;this.queueList.push(object);}},processQueue:function(){var nQueueLength=this.queueList.length;var nCount=0;var nCurrentObject=0;if(nQueueLength===0)return;for(nCount=0;nCount<nQueueLength;nCount+=1){nCurrentObject=this.queueList[nCount];this.layerList.push(nCurrentObject);if(nCurrentObject['start']){nCurrentObject['start']();}else if(nCurrentObject['callObjectMethods']){nCurrentObject['callObjectMethods']('start',this.tools);}}
this.queueList=[];},clearLandscape:function(){var count=0;var len=this.count();var currObj=null;for(count=0;count<len;count+=1){currObj=this.getItemByIdx(count);if(currObj instanceof LandscapeLayer||currObj.__id!=='objects'){this.removeItem(currObj.__id);}else if(currObj instanceof ObjectLayer){var subcount=0;var sublen=currObj.objList.length;var subObj=null;for(subcount=0;subcount<sublen;subcount+=1){subObj=currObj.objList[subcount];if(!(subObj.persistent)){currObj.removeObject(subObj.__id);}}}}}});(function(){var lastTime=0;var vendors=['ms','moz','webkit','o'];for(var x=0;x<vendors.length&&!window.requestAnimationFrame;++x){window.requestAnimationFrame=window[vendors[x]+'RequestAnimationFrame'];window.cancelAnimationFrame=window[vendors[x]+'CancelAnimationFrame']||window[vendors[x]+'CancelRequestAnimationFrame'];}
if(!window.requestAnimationFrame)
window.requestAnimationFrame=function(callback,element){var currTime=new Date().getTime();var timeToCall=Math.max(0,16-(currTime-lastTime));var id=window.setTimeout(function(){callback(currTime+timeToCall);},timeToCall);lastTime=currTime+timeToCall;return id;};if(!window.cancelAnimationFrame)
window.cancelAnimationFrame=function(id){clearTimeout(id);};}());;var Game=Class.extend({oCanvas:null,layerList:[],moduleList:[],messageContainer:null,moduleTools:null,imageManager:null,status:STATUS_STOPPED,animFrame:null,actualMap:"",settings:{debug:true,drawCollisionRects:false},init:function(canvas){this.imageManager=new AssetManager();this.oCanvas=new CanvasExt(canvas);this.messageContainer=new MessageContainer();this.moduleTools=new ModuleTools(this);this.layerList=new LayerList(this.moduleTools);this.addLayer('loadingScreen',new LoadingScreen());},addModule:function(moduleId,moduleObj){if(typeof moduleObj==='object'){moduleObj.__id=moduleId;this.moduleList.push(moduleObj);}},getModule:function(moduleId){if(typeof moduleId==='string'){var oCurrentModule=null,nObjectCount=0,moduleLength=this.moduleList.length;for(nObjectCount=0;nObjectCount<moduleLength;nObjectCount+=1){oCurrentModule=this.moduleList[nObjectCount];if(oCurrentModule!==null&&oCurrentModule!==undefined&&oCurrentModule.__id===moduleId){return oCurrentModule;}}}
return null;},executionKey:function(event){var sEventType=event.type;if(event.keyCode!==17&&event.keyCode!==116){event.preventDefault();}
this.callObjectMethods(sEventType,event);},startGame:function(){var game=this;game.preStart();game.gameLogic();this.imageManager.load(function(){game.messageContainer.speak({message:"#start#",data:null});game.callObjectMethods("start",game.moduleTools);game.status=STATUS_RUNNING;game.removeLayer('loadingScreen');},this.getLayer('loadingScreen'));},pauseGame:function(){this.status=STATUS_IDDLE;cancelAnimationFrame(this.animFrame);},resumeGame:function(){this.status=STATUS_RUNNING;this.gameLogic();},changeViewPort:function(x,y){this.callObjectMethods('changeViewPort',{x:x,y:y});},preStart:function(){var module;var nObjectCount=0;var nGameObjectsLength=this.moduleList.length;for(nObjectCount=0;nObjectCount<nGameObjectsLength;nObjectCount+=1){module=this.moduleList[nObjectCount];if(typeof module!=='undefined'){module.loadModule(this.moduleTools);}}
this.messageContainer.speak({message:"#prestart#",data:null});this.callObjectMethods("prestart",this.moduleTools);},callObjectMethods:function(methodName,args){var oCurrentGameObject=null;var nObjectCount=0;var nGameObjectsLength=this.layerList.count();for(nObjectCount=0;nObjectCount<nGameObjectsLength;nObjectCount+=1){oCurrentGameObject=this.layerList.getItemByIdx(nObjectCount);if(oCurrentGameObject[methodName]){oCurrentGameObject[methodName](args);}
if(oCurrentGameObject['callObjectMethods']){oCurrentGameObject['callObjectMethods'](methodName,args);}}},gameLogic:function(){this.executionRemove();this.executionAddFromQueue();this.messageContainer.speak({message:"#checkCollisions#",data:null});this.executionUpdate();this.executionDraw();var self=this;this.animFrame=requestAnimationFrame(function(){self.gameLogic();});},executionRemove:function(){this.layerList.clearRemoveds();},executionAddFromQueue:function(){if(this.status===STATUS_RUNNING){this.layerList.processQueue();}},executionUpdate:function(){this.callObjectMethods("update",this.oCanvas);this.layerList.sort(function(oObjA,oObjB){return oObjA.z-oObjB.z;});},executionDraw:function(){this.oCanvas.bufferContext.clearRect(0,0,this.oCanvas.buffer.width,this.oCanvas.buffer.height);this.callObjectMethods("draw",this.oCanvas);this.messageContainer.speak({message:"#draw#",data:null});this.oCanvas.mainContext.clearRect(0,0,this.oCanvas.main.width,this.oCanvas.main.height);this.oCanvas.mainContext.drawImage(this.oCanvas.buffer,0,0);},setSettings:function(settings){this.settings=settings;},updOrSetSetting:function(key,value){this.settings[key]=value;this.moduleTools.settings=this.settings;},addLayer:function(sObjectId,object){this.layerList.addItem(sObjectId,object);},addLayerToQueue:function(sObjectId,object){this.layerList.addToQueue(sObjectId,object);},removeLayer:function(sObjectId){this.layerList.removeItem(sObjectId);},getLayer:function(sObjectId){return this.layerList.getItem(sObjectId);},clearLandscape:function(){this.layerList.clearLandscape();}});;var CanvasExt=Class.extend({main:null,mainContext:null,buffer:null,bufferContext:null,canvasText:null,init:function(canvasId){this.main=document.getElementById(canvasId);if(this.main!==null){this.mainContext=this.main.getContext('2d');this.buffer=document.createElement('canvas');this.buffer.width=this.main.width;this.buffer.height=this.main.height;this.bufferContext=this.buffer.getContext('2d');this.canvasText=new CanvasText();this.canvasText.config({canvas:this.buffer,context:this.bufferContext,fontSize:'14px',fontWeight:'normal',fontColor:'red',lineHeight:"22"});}}});;var ModuleTools=Class.extend({messageContainer:null,canvas:null,settings:[],canvasText:null,collisionUtils:null,imageList:null,mapList:null,game:null,init:function(game){this.collisionUtils=new CollisionUtils();this.messageContainer=game.messageContainer;this.canvas=game.oCanvas;this.settings=game.settings;this.canvasText=game.canvasText;this.imageList=game.imageManager.ImageCollection;this.mapList=game.imageManager.MapCollection;this.game=game;}});;var MessageContainer=Class.extend({speak:function(oNotification){var nListenersLength,nCount,oListener,aMeetingList=this[oNotification.message];if(typeof aMeetingList!=='undefined'){nListenersLength=aMeetingList.length;for(nCount=0;nCount<nListenersLength;nCount+=1){oListener=aMeetingList[nCount];if(oListener!==undefined){oListener.handler.call(oListener.module,oNotification);}}}},listen:function(aMessages,fpHandler,oModule){var sMessage='',nMessage=0,nMessages=aMessages.length;for(nMessage=0;nMessage<nMessages;nMessage+=1){sMessage=aMessages[nMessage];if(typeof this[sMessage]==='undefined'){this[sMessage]=[];}
this[sMessage].push({module:oModule,handler:fpHandler});}},unlisten:function(message,module){var sMessage='',nMessage=0,nMessages=message.length;for(nMessage=0;nMessage<nMessages;nMessage+=1){sMessage=message[nMessage];if(typeof this[sMessage]!=='undefined'){var nListenersLength=this[sMessage].length;for(var nCount=0;nCount<nListenersLength;nCount+=1){var oListener=this[sMessage][nCount];if(oListener.module===module){delete this[sMessage][nCount];}}}}}});;var AssetManager=Class.extend({successCount:0,errorCount:0,ImageCollection:{},MapCollection:{},assetQueue:[],init:function(){},load:function(callback,loadingScreen){if(this.assetQueue.length===0){callback();}
for(var i=0;i<this.assetQueue.length;i++){var id=this.assetQueue[i].id,path=this.assetQueue[i].path,type=this.assetQueue[i].type;switch(type){case"image":this.loadImage(callback,loadingScreen,id,path);break;case"map":this.loadMap(callback,loadingScreen,id,path);break;}}},addAsset:function(type,id,path){this.assetQueue.push({id:id,path:path,type:type});},loadImage:function(callback,loadingScreen,id,path){var img=new Image();var self=this;img.addEventListener("load",function(){self.successCount+=1;loadingScreen.setValue(self.getProgress());if(self.isDone()){callback();}},false);img.addEventListener("error",function(){self.errorCount+=1;if(self.isDone()){callback();}},false);img.src=path;this.ImageCollection[id]=img;},loadMap:function(callback,loadingScreen,id,path){var self=this;$.getJSON(path,function(data){self.successCount+=1;loadingScreen.setValue(self.getProgress());if(self.isDone()){callback();}
self.MapCollection[id]=data;});},getProgress:function(){var progress=((this.successCount+this.errorCount)*300)/this.assetQueue.length;return progress;},isDone:function(){return(this.assetQueue.length==(this.successCount+this.errorCount));},resetQueue:function(){this.assetQueue=[];this.successCount=0;this.errorCount=0;}});;var SpriteSheet=Class.extend({_sprites:[],_width:0,_height:0,init:function(data){this._height=data.height;this._width=data.width;this._sprites=data.sprites;},getOffset:function(spriteName){for(var i=0,len=this._sprites.length;i<len;i++){var sprite=this._sprites[i];if(sprite.name==spriteName){return{x:this._width*sprite.x,y:this._height*sprite.y,width:this._width,height:this._height};}}
return null;}});;var Animation=Class.extend({_frames:[],_frame:null,_frameDuration:0,_sprites:null,init:function(data,sprites){this._frames=data;this._frameIndex=0;this._frameDuration=data[0].time;this._sprites=sprites;},animate:function(deltaTime){this._frameDuration-=deltaTime;if(this._frameDuration<=0){this._frameIndex++;if(this._frameIndex==this._frames.length){this._frameIndex=0;}
this._frameDuration=this._frames[this._frameIndex].time;}},getSprite:function(){return this._sprites.getOffset(this._frames[this._frameIndex].sprite);}});var FrameTimer=Class.extend({_lastTick:null,init:function(){this._lastTick=(new Date()).getTime();},getSeconds:function(){var seconds=this._frameSpacing/1000;if(isNaN(seconds)){return 0;}
return seconds;},tick:function(){var currentTick=(new Date()).getTime();this._frameSpacing=currentTick-this._lastTick;this._lastTick=currentTick;}});;var IModule=Class.extend({tools:null,init:function(){},loadModule:function(){}});;var Object=Class.extend({x:0,y:0,width:0,height:0,destx:0,desty:0,movement:null,collision:null,reaction:null,speed:5,weight:10,z:0,gravity:0,tools:null,init:function(){this.movement=new Movement();this.reaction=new Movement();this.collision=new Collision();},prestart:function(tools){this.tools=tools;},start:function(tools){this.tools=tools;},update:function(){},draw:function(canvas){},move:function(checkDestination){if(this.movement.right!==0&&!this.collision.right){this.x+=this.movement.right;if(checkDestination&&this.x>=this.destx){this.destx=0;this.movement.unSetMovement('right');}}
if(this.movement.left!==0&&!this.collision.left){this.x-=this.movement.left;if(checkDestination&&this.x<=this.destx){this.destx=0;this.movement.unSetMovement('left');}}
if(this.movement.up!==0&&!this.collision.top){this.y-=this.movement.up;if(checkDestination&&this.y<=this.desty){this.desty=0;this.movement.unSetMovement('up');}}
if(this.movement.down!==0&&!this.collision.bottom){this.y+=this.movement.down;if(checkDestination&&this.y>=this.desty){this.desty=0;this.movement.unSetMovement('down');}}},isMoving:function(){return this.movement.isMoving();},hasCollisions:function(){return this.collision.hasCollisions();},toString:function(){var result="";result+="x: "+this.x+"</br>";result+="y: "+this.y+"</br>";result+="z: "+this.z+"</br>";result+="width: "+this.width+"</br>";result+="height: "+this.height+"</br>";result+="destx: "+this.destx+"</br>";result+="desty: "+this.desty+"</br>";result+=this.movement.toString()+"</br>";result+="speed: "+this.speed+"</br>";result+="weight: "+this.weight+"</br>";return result;}});;var Clickable=Object.extend({update:function(){if(this.isMoving()){this.move(true);}},start:function(tools){this._super(tools);},click:function(evt){this.movement.stop();this.destx=evt.clientX;this.destx-=(this.width/2);this.desty=evt.clientY;this.desty-=(this.height/2);if(this.x<this.destx){this.movement.setMovement('right',this.speed);}
if(this.x>this.destx){this.movement.setMovement('left',this.speed);}
if(this.y>this.desty){this.movement.setMovement('up',this.speed);}
if(this.y<this.desty){this.movement.setMovement('down',this.speed);}}});;var CursorMovable=Object.extend({update:function(canvas){if(this.isMoving()){this.move(false);}},start:function(tools){this._super(tools);},keydown:function(event){if(event.keyCode===39){this.movement.setMovement('right',this.speed);}
if(event.keyCode===37){this.movement.setMovement('left',this.speed);}
if(event.keyCode===38){this.movement.setMovement('up',this.speed);}
if(event.keyCode===40){this.movement.setMovement('down',this.speed);}},keyup:function(event){if(event.keyCode===39){this.movement.unSetMovement('right');}
if(event.keyCode===37){this.movement.unSetMovement('left');}
if(event.keyCode===38){this.movement.unSetMovement('up');}
if(event.keyCode===40){this.movement.unSetMovement('down');}}});;var ImageObj=Object.extend({oImage:null,nSourceX:32,nSourceY:32,init:function(image){this.oImage=image;},start:function(tools){this._super(tools);},draw:function(canvas){canvas.bufferContext.drawImage(this.oImage,this.nSourceX,this.nSourceY,this.size.width,this.size.height,this.position.x,this.position.y,this.size.width,this.size.height);},toString:function(){var result="";var res=this._super();result+=res;result+="image:"+this.oImage.src;return result;}});;var ObjectLayer=Class.extend({z:0,objList:[],objsToRemove:[],tools:null,init:function(objs){this.objList=[];if(objs!==null&&objs!==undefined){this.objList=objs;}},prestart:function(tools){this.tools=tools;},getObject:function(sObjectId){if(typeof sObjectId==='string'){var oCurrentGameObject=null;var nObjectCount=0;var objLength=this.objList.length;for(nObjectCount=0;nObjectCount<objLength;nObjectCount+=1){oCurrentGameObject=this.objList[nObjectCount];if(oCurrentGameObject.__id===sObjectId){return oCurrentGameObject;}}}
return null;},addObject:function(sObjectId,object){if(typeof object==='object'){object.__id=sObjectId;this.objList.push(object);}},removeObject:function(sObjectId){if(typeof sObjectId==='string'){var oCurrentGameObject=null;var nObjectCount=0;var nGameObjectsLength=this.objList.length;for(nObjectCount=0;nObjectCount<nGameObjectsLength;nObjectCount+=1){oCurrentGameObject=this.objList[nObjectCount];if(oCurrentGameObject.__id===sObjectId){this.objsToRemove.push(nObjectCount);}}}},callObjectMethods:function(methodName,args){var oCurrentGameObject=null;var nObjectCount=0;var nGameObjectsLength=this.objList.length;for(nObjectCount=0;nObjectCount<nGameObjectsLength;nObjectCount+=1){oCurrentGameObject=this.objList[nObjectCount];if(oCurrentGameObject[methodName]){oCurrentGameObject[methodName](args);}}},mergeWith:function(obj){for(var key in obj.objList){var exists=this.getObject(obj.objList[key].__id);if(exists===null){this.addObject(obj.objList[key].__id,obj.objList[key]);}else{exists.x=obj.objList[key].x;exists.y=obj.objList[key].y;exists.z=obj.objList[key].z;exists.speed=obj.objList[key].speed;exists.gravity=obj.objList[key].gravity;}}}});;var LandscapeLayer=Class.extend({z:0,imagesList:[],layBuffer:null,test:null,actualX:0,actualY:0,width:0,height:0,tools:null,init:function(images){this.imagesList=[];if(images!==null&&images!==undefined){this.imagesList=images;}},start:function(tools){this.tools=tools;},preRender:function(){var actualImg;this.layBuffer=document.createElement('canvas');this.layBuffer.width=this.width;this.layBuffer.height=this.height;var layBufferContext=this.layBuffer.getContext('2d');layBufferContext.clearRect(0,0,this.layBuffer.width,this.layBuffer.height);for(var i=0;i<this.imagesList.length;i+=1){actualImg=this.imagesList[i];layBufferContext.drawImage(actualImg.oImage,actualImg.nSourceX,actualImg.nSourceY,actualImg.width,actualImg.height,actualImg.x,actualImg.y,actualImg.width,actualImg.height);}},draw:function(canvas){if(this.layBuffer!==null){canvas.bufferContext.drawImage(this.layBuffer,this.actualX,this.actualY);}},addImage:function(image){this.imagesList.push(image);},changeViewPort:function(pos){this.actualX+=pos.x;this.actualY+=pos.y;}});;var Movement=Class.extend({right:0,left:0,up:0,down:0,setMovement:function(direction,speed){this[direction]=speed;},unSetMovement:function(direction){this[direction]=0;},isMoving:function(){return(this.left!==0||this.right!==0||this.up!==0||this.down!==0);},stop:function(){this.left=0;this.right=0;this.up=0;this.down=0;},getSignedActualSpeed:function(){var speedx=0,speedy=0;if(this.right!==0){speedx=this.right;}else if(this.left!==0){speedx=-this.left;}
if(this.down!==0){speedy=this.down;}else if(this.up!==0){speedy=-this.up;}
return{x:speedx,y:speedy};},toString:function(){var result=this.getSignedActualSpeed();return'movement.x:'+result.x+' <br/> movement.y:'+result.y;}});;var Collision=Class.extend({right:false,left:false,top:false,bottom:false,setCollision:function(direction){this[direction]=true;},unSetCollision:function(direction){this[direction]=false;},releaseCollisions:function(){this.right=false;this.left=false;this.top=false;this.bottom=false;},hasCollisions:function(){return this.right||this.left||this.top||this.bottom;}});;var LoadingScreen=Class.extend({radius:15,x:180,y:220,width:300,height:30,max:300,actualW:0,setValue:function(value){if(this.actualW<this.max){this.actualW=value;}},draw:function(canvas){this.bgRect(canvas);this.roundRect(canvas);this.roundRect(canvas);this.progressRect(canvas);this.text(canvas);},bgRect:function(canvas){canvas.bufferContext.fillStyle='rgba(189,189,189,1)';},roundRect:function(canvas){canvas.bufferContext.beginPath();canvas.bufferContext.moveTo(this.x+this.radius,this.y);canvas.bufferContext.lineTo(this.x+this.width-this.radius,this.y);canvas.bufferContext.arc(this.x+this.width-this.radius,this.y+this.radius,this.radius,-Math.PI/2,Math.PI/2,false);canvas.bufferContext.lineTo(this.x+this.radius,this.y+this.height);canvas.bufferContext.arc(this.x+this.radius,this.y+this.radius,this.radius,Math.PI/2,3*Math.PI/2,false);canvas.bufferContext.closePath();canvas.bufferContext.fill();},text:function(canvas){canvas.bufferContext.fillStyle='white';var text=Math.floor(this.actualW/this.max*100)+"%";var text_width=canvas.bufferContext.measureText(text).width;var text_x=this.x+this.actualW-text_width-this.radius/2;if(this.actualW<=this.radius+text_width){text_x=this.x+this.radius/2;}
canvas.bufferContext.fillText(text,text_x,this.y+22);},progressRect:function(canvas){var progress_lingrad=canvas.bufferContext.createLinearGradient(0,this.y+this.height,0,0);progress_lingrad.addColorStop(0,'#4DA4F3');progress_lingrad.addColorStop(0.4,'#ADD9FF');progress_lingrad.addColorStop(1,'#9ED1FF');canvas.bufferContext.fillStyle=progress_lingrad;var offset=0;canvas.bufferContext.beginPath();if(this.actualW<this.radius){offset=this.radius-Math.sqrt(Math.pow(this.radius,2)-Math.pow((this.radius-this.actualW),2));var left_angle=Math.acos((this.radius-this.actualW)/this.radius);canvas.bufferContext.moveTo(this.x+this.actualW,this.y+offset);canvas.bufferContext.lineTo(this.x+this.actualW,this.y+this.height-offset);canvas.bufferContext.arc(this.x+this.radius,this.y+this.radius,this.radius,Math.PI-left_angle,Math.PI+left_angle,false);}
else if(this.actualW+this.radius>this.max){offset=this.radius-Math.sqrt(Math.pow(this.radius,2)-Math.pow((this.radius-(this.max-this.actualW)),2));var right_angle=Math.acos((this.radius-(this.max-this.actualW))/this.radius);canvas.bufferContext.moveTo(this.x+this.radius,this.y);canvas.bufferContext.lineTo(this.x+this.actualW,this.y);canvas.bufferContext.arc(this.x+this.max-this.radius,this.y+this.radius,this.radius,-Math.PI/2,-right_angle,false);canvas.bufferContext.lineTo(this.x+this.actualW,this.y+this.height-offset);canvas.bufferContext.arc(this.x+this.max-this.radius,this.y+this.radius,this.radius,right_angle,Math.PI/2,false);canvas.bufferContext.lineTo(this.x+this.radius,this.y+this.height);canvas.bufferContext.arc(this.x+this.radius,this.y+this.radius,this.radius,Math.PI/2,3*Math.PI/2,false);}
else{canvas.bufferContext.moveTo(this.x+this.radius,this.y);canvas.bufferContext.lineTo(this.x+this.actualW,this.y);canvas.bufferContext.lineTo(this.x+this.actualW,this.y+this.height);canvas.bufferContext.lineTo(this.x+this.radius,this.y+this.height);canvas.bufferContext.arc(this.x+this.radius,this.y+this.radius,this.radius,Math.PI/2,3*Math.PI/2,false);}
canvas.bufferContext.closePath();canvas.bufferContext.fill();}});;var Rectangle=Object.extend({color:'red',collisionType:'Rectangle',start:function(moduleTools){this._super(moduleTools);moduleTools.messageContainer.speak({message:"#collisionSubs#",obj:this,callback:'handleCollision'});},draw:function(canvas){canvas.bufferContext.beginPath();canvas.bufferContext.rect(this.x,this.y,this.width,this.height);canvas.bufferContext.fillStyle=this.color;canvas.bufferContext.closePath();canvas.bufferContext.fill();canvas.bufferContext.lineWidth=2;canvas.bufferContext.strokeStyle='black';canvas.bufferContext.stroke();},handleCollision:function(res){var noCollision=true;for(var i=0;i<res.length;i+=1){if(res[i]!==null){noCollision=false;this.color='red';var side=this.tools.collisionUtils.getCollisionSide(this,res[i],false);this.collision.setCollision(side);}}
if(noCollision){this.color="yellow";this.collision.releaseCollisions();}},toString:function(){var test=this._super();var result="";result+=test;result+="color:"+this.color+'</br>';result+="collisionType:"+this.collisionType+'</br>';return result;}});;var Circle=Object.extend({collisionType:'Circle',radius:0,start:function(tools){this._super(tools);tools.messageContainer.speak({message:"#collisionSubs#",obj:this,callback:'handleCollision'});},update:function(canvas){if(this.reaction.isMoving()){this.movement.left=this.reaction.left;this.movement.right=this.reaction.right;this.movement.up=this.reaction.up;this.movement.down=this.reaction.down;this.reaction.stop();}
if(this.isMoving()){this.move(false);}},draw:function(canvas){canvas.bufferContext.beginPath();canvas.bufferContext.arc(this.x,this.y,this.radius,0,2*Math.PI,false);canvas.bufferContext.closePath();canvas.bufferContext.fillStyle=this.color;canvas.bufferContext.fill();canvas.bufferContext.lineWidth=2;canvas.bufferContext.strokeStyle='#003300';canvas.bufferContext.stroke();},handleCollision:function(res){this.color='yellow';for(var i=0;i<res.length;i+=1){if(res[i]!==null){if(res[i].collisionType==='Circle'){var o1speed=this.movement.getSignedActualSpeed(),o2speed=res[i].movement.getSignedActualSpeed();var newVelX1=(o1speed.x*(this.weight-res[i].weight)+(2*res[i].weight*o2speed.x))/(this.weight+res[i].weight);var newVelY1=(o1speed.y*(this.weight-res[i].weight)+(2*res[i].weight*o2speed.y))/(this.weight+res[i].weight);if(newVelX1>0){this.reaction.unSetMovement('left');this.reaction.setMovement('right',Math.abs(newVelX1));}
if(newVelX1<0){this.reaction.unSetMovement('right');this.reaction.setMovement('left',Math.abs(newVelX1));}
if(newVelY1<0){this.reaction.unSetMovement('down');this.reaction.setMovement('up',Math.abs(newVelY1));}
if(newVelY1>0){this.reaction.unSetMovement('up');this.reaction.setMovement('down',Math.abs(newVelY1));}
this.color='red';}
if(res[i].collisionType==='Rectangle'){var side=this.tools.collisionUtils.getCollisionSide(this,res[i],true);this.color='red';if(side==='right'){this.x-=this.speed;this.movement.setMovement('left',this.movement.right);this.movement.unSetMovement(side);}
if(side==='left'){this.x+=this.speed;this.movement.setMovement('right',this.movement.left);this.movement.unSetMovement(side);}
if(side==='top'){this.y+=this.speed;this.movement.setMovement('down',this.movement.up);this.movement.unSetMovement('up');}
if(side==='bottom'){this.y-=this.speed;this.movement.setMovement('up',this.movement.down);this.movement.unSetMovement('down');}}}}},toString:function(){var test=this._super();var result="";result+=test;result+="radius:"+this.radius+'</br>';result+="color:"+this.color+'</br>';result+="collisionType:"+this.collisionType+'</br>';return result;},changeViewPort:function(pos){this.x+=pos.x;this.y+=pos.y;}});var RectangleClick=Clickable.extend({color:'blue',collisionType:'Rectangle',start:function(moduleTools){this._super(moduleTools);moduleTools.messageContainer.speak({message:"#collisionSubs#",obj:this,callback:'handleCollision'});},draw:function(canvas){canvas.bufferContext.beginPath();canvas.bufferContext.rect(this.x,this.y,this.width,this.height);canvas.bufferContext.fillStyle=this.color;canvas.bufferContext.closePath();canvas.bufferContext.fill();canvas.bufferContext.lineWidth=2;canvas.bufferContext.strokeStyle='black';canvas.bufferContext.stroke();},handleCollision:function(res){var noCollision=true;for(var i=0;i<res.length;i+=1){if(res[i]!==null){noCollision=false;this.color='red';var side=this.tools.collisionUtils.getCollisionSide(this,res[i],false);this.collision.setCollision(side);}}
if(noCollision){this.color="yellow";this.collision.releaseCollisions();}},toString:function(){var test=this._super();var result="";result+=test;result+="color:"+this.color+'</br>';result+="collisionType:"+this.collisionType+'</br>';return result;}});;var FirstPlayer=Object.extend({color:'red',collisionType:'Rectangle',sprite:null,animation:null,image:null,collisionBox:null,persistent:true,start:function(moduleTools){this._super(moduleTools);var self=this;this.collisionBox=new CollisionBox();this.collisionBox.width=15;this.collisionBox.height=35;this.collisionBox.tools=moduleTools;this.collisionBox.handleCollision=function(res){self.handleCollision(res);};this.tools.messageContainer.speak({message:"#collisionSubs#",obj:this.collisionBox,callback:'handleCollision'});this.sprite=new SpriteSheet({width:60,height:60,sprites:[{name:'stand'},{name:'walk_left_1',x:0,y:0},{name:'walk_left_2',x:1,y:0},{name:'walk_left_3',x:2,y:0},{name:'walk_left_4',x:3,y:0},{name:'walk_left_5',x:4,y:0},{name:'walk_right_1',x:0,y:1},{name:'walk_right_2',x:1,y:1},{name:'walk_right_3',x:2,y:1},{name:'walk_right_4',x:3,y:1},{name:'walk_right_5',x:4,y:1},{name:'walk_up_1',x:0,y:2},{name:'walk_up_2',x:1,y:2},{name:'walk_up_3',x:2,y:2},{name:'walk_up_4',x:3,y:2},{name:'walk_up_5',x:4,y:2},{name:'walk_down_1',x:0,y:3},{name:'walk_down_2',x:1,y:3},{name:'walk_down_3',x:2,y:3},{name:'walk_down_4',x:3,y:3},{name:'walk_down_5',x:4,y:3}]});this.animation=new Animation([{sprite:'walk_down_1',time:0.1}],this.sprite);this.timer=new FrameTimer();this.timer.tick();this.image=this.tools.imageList["link.png"];},centerOnScreen:function(){this.tools.game.changeViewPort(-(this.x-300),-(this.y-240));this.x=300;this.y=240;},update:function(canvas){if(this.gravity!==0){if(!this.collision.bottom){this.y+=this.gravity;}}
if(this.movement.left!==0&&!this.collision.left){this.animation._frames=[{sprite:'walk_left_1',time:0.1},{sprite:'walk_left_2',time:0.1},{sprite:'walk_left_3',time:0.1},{sprite:'walk_left_4',time:0.1},{sprite:'walk_left_5',time:0.1}];this.tools.game.changeViewPort(+this.speed,0);}
if(this.movement.right!==0&&!this.collision.right){this.animation._frames=[{sprite:'walk_right_1',time:0.1},{sprite:'walk_right_2',time:0.1},{sprite:'walk_right_3',time:0.1},{sprite:'walk_right_4',time:0.1},{sprite:'walk_right_5',time:0.1}];this.tools.game.changeViewPort(-this.speed,0);}
if(this.gravity===0&&this.movement.up!==0&&!this.collision.top){this.animation._frames=[{sprite:'walk_up_1',time:0.1},{sprite:'walk_up_2',time:0.1},{sprite:'walk_up_3',time:0.1},{sprite:'walk_up_4',time:0.1},{sprite:'walk_up_5',time:0.1}];this.tools.game.changeViewPort(0,+this.speed);}
if(this.movement.down!==0&&!this.collision.bottom){this.animation._frames=[{sprite:'walk_down_1',time:0.1},{sprite:'walk_down_2',time:0.1},{sprite:'walk_down_3',time:0.1},{sprite:'walk_down_4',time:0.1},{sprite:'walk_down_5',time:0.1}];this.tools.game.changeViewPort(0,-this.speed);}
this.collisionBox.x=this.x+22;this.collisionBox.y=this.y+12;},draw:function(canvas){this.animation.animate(this.timer.getSeconds());var frame=this.animation.getSprite();canvas.bufferContext.drawImage(this.image,frame.x,frame.y,60,60,this.x,this.y,60,60);this.timer.tick();this.collisionBox.draw(canvas);},handleCollision:function(res){var noCollision=true;for(var i=0;i<res.length;i+=1){if(res[i]!==null){noCollision=false;if(res[i]instanceof CollisionBox){var side=this.tools.collisionUtils.getCollisionSide(this.collisionBox,res[i],false);this.collision.setCollision(side);}}}
if(noCollision){this.collision.releaseCollisions();}},toString:function(){var test=this._super();var result="";result+=test;result+="color:"+this.color+'</br>';result+="collisionType:"+this.collisionType+'</br>';return result;},keydown:function(event){if(event.keyCode===39){this.movement.setMovement('right',this.speed);}
if(event.keyCode===37){this.movement.setMovement('left',this.speed);}
if(event.keyCode===38){this.movement.setMovement('up',this.speed);}
if(event.keyCode===40){this.movement.setMovement('down',this.speed);}},keyup:function(event){this.animation._frameIndex=0;if(event.keyCode===39){this.movement.unSetMovement('right');this.animation._frames=[{sprite:'walk_right_5',time:0.1}];}
if(event.keyCode===37){this.movement.unSetMovement('left');this.animation._frames=[{sprite:'walk_left_1',time:0.1}];}
if(event.keyCode===38){this.movement.unSetMovement('up');this.animation._frames=[{sprite:'walk_up_1',time:0.1}];}
if(event.keyCode===40){this.movement.unSetMovement('down');this.animation._frames=[{sprite:'walk_down_1',time:0.1}];}},kill:function(test){this.tools.game.getLayer('objects').removeObject('fp');}});;var Text=Object.extend({text:'',x:100,y:10,fontColor:'red',fontSize:'14px',fontWeight:"normal",init:function(text){this.text=text;},start:function(tools){this._super=tools;},draw:function(canvas){canvas.canvasText.config({canvas:canvas.buffer,context:canvas.bufferContext,fontSize:this.fontSize,fontWeight:this.fontWeight,fontColor:this.fontColor,lineHeight:"22"});canvas.canvasText.drawText({text:this.text,x:this.x,y:this.y});},toString:function(){var test=this._super();var result="";result+=test;result+="fontColor:"+this.fontColor+'</br>';result+="fontSize:"+this.fontSize+'</br>';result+="fontWeight:"+this.fontWeight+'</br>';result+="text:"+this.text+'</br>';return result;}});;var CollisionBox=Class.extend({x:0,y:0,width:0,height:0,weight:100,speed:0,movement:null,z:0,collision:null,color:'grey',collisionType:'Rectangle',tools:null,init:function(){this.collision=new Collision();this.movement=new Movement();},start:function(moduleTools){this.tools=moduleTools;moduleTools.messageContainer.speak({message:"#collisionSubs#",obj:this,callback:'handleCollision'});},draw:function(canvas){if(this.tools.settings.drawCollisionRects){canvas.bufferContext.beginPath();canvas.bufferContext.rect(this.x,this.y,this.width,this.height);canvas.bufferContext.fillStyle=this.color;canvas.bufferContext.closePath();canvas.bufferContext.lineWidth=1;canvas.bufferContext.strokeStyle='red';canvas.bufferContext.stroke();}},handleCollision:function(res){},hasCollisions:function(){return this.collision.hasCollisions();},changeViewPort:function(pos){this.x+=pos.x;this.y+=pos.y;}});;var FpsModule=IModule.extend({currentFps:0,frameCount:0,lastFps:null,oBuffer:null,loadModule:function(tools){this.lastFps=new Date().getTime();this.tools=tools;this.oBuffer=tools.canvas.bufferContext;tools.messageContainer.listen(["#draw#"],this.drawFps,this);},drawFps:function(){var thisFrame=new Date().getTime();var diffTime=Math.ceil((thisFrame-this.lastFps));if(diffTime>=1000){this.currentFps=this.frameCount;this.frameCount=0.0;this.lastFps=thisFrame;}
this.oBuffer.save();this.oBuffer.fillStyle='red';this.oBuffer.font='bold 12px sans-serif';this.oBuffer.fillText('FPS: '+this.currentFps,10,15);this.oBuffer.restore();this.frameCount+=1;}});;var LayerHandler=IModule.extend({image:null,tileMap:null,mapWidth:'',mapHeight:'',tileWidth:'',tileHeight:'',layers:'',imageCols:'',imageRows:'',nTileId:'',nSourceX:'',nSourceY:'',nDataCount:'',nAxisX:'',nAxisY:'',layerList:[],init:function(jsonMap){this.setTileMap(jsonMap);},loadModule:function(tools){this.tools=tools;this.tools.messageContainer.listen(["#loadMap#"],this.preloadMap,this);this.tools.messageContainer.listen(["#draw#"],this.loadMap,this);},setTileMap:function(jsonMap){this.layerList=[];this.tileMap=jsonMap;},preloadMap:function(notification){this.tools.game.clearLandscape();this.tools.game.actualMap=notification.mapName;this.setTileMap(this.tools.mapList[notification.mapName]);this.canLoadMap=true;},loadMap:function(notification){if(!this.canLoadMap||this.tileMap===null||this.tileMap===undefined){return;}
this.image=this.tools.imageList[this.tileMap.tilesets[0].name];this.tileWidth=this.tileMap.tilewidth;this.tileHeight=this.tileMap.tileheight;this.mapWidth=this.tileWidth*this.tileMap.width;this.mapHeight=this.tileHeight*this.tileMap.height;this.layers=this.tileMap.layers;this.imageCols=this.tileMap.tilesets[0].imagewidth/this.tileWidth;this.imageRows=this.tileMap.tilesets[0].imageheight/this.tileHeight;var currentLayer,currentLayerLen=this.layers.length;for(var nCount=0;nCount<currentLayerLen;nCount+=1){currentLayer=this.layers[nCount];if(this.layers[nCount].type==='tilelayer'){this.addLandscapeLayer(currentLayer,currentLayer.data.length);}else if(this.layers[nCount].type==='objectgroup'){this.addObjectLayer(currentLayer);}}
for(var lay in this.layerList){this.tools.game.addLayer(this.layerList[lay].__id,this.layerList[lay]);}
this.canLoadMap=false;this.tools.game.layerList.sort(function(oObjA,oObjB){return oObjA.z-oObjB.z;});this.tools.game.callObjectMethods('centerOnScreen',null);},getActualTileset:function(tileId){var length=this.tileMap.tilesets.length;for(var i=0;i<length;i+=1){var actualTileset=this.tileMap.tilesets[i];var nextTileset=this.tileMap.tilesets[i+1];if(tileId>=actualTileset.firstgid){if(nextTileset===undefined||tileId<=nextTileset.firstgid){this.image=this.tools.imageList[actualTileset.name];this.imageCols=actualTileset.imagewidth/this.tileWidth;this.imageRows=actualTileset.imageheight/this.tileHeight;return tileId-actualTileset.firstgid+1;}}}},addLandscapeLayer:function(currentLayer,currentLayerDataLen){this.nAxisX=0;this.nAxisY=0;var layer=new LandscapeLayer();for(var nDataCount=0;nDataCount<currentLayerDataLen;nDataCount+=1){this.nTileId=this.getActualTileset(currentLayer.data[nDataCount]);this.nSourceX=Math.floor((this.nTileId-1)%this.imageCols);if(this.nSourceX!==-1){this.nSourceX*=this.tileWidth;this.nSourceY=Math.floor((this.nTileId-1)/this.imageCols);this.nSourceY*=this.tileHeight;var cell=new ImageObj(this.image);cell.x=this.nAxisX;cell.y=this.nAxisY;cell.width=this.tileWidth;cell.height=this.tileHeight;cell.nSourceX=this.nSourceX;cell.nSourceY=this.nSourceY;layer.addImage(cell);}
this.nAxisX+=this.tileWidth;if(this.nAxisX===this.mapWidth){this.nAxisX=0;this.nAxisY+=this.tileHeight;}}
layer.__id=currentLayer.name;for(var i in currentLayer.properties){var prop=currentLayer.properties[i];if(!isNaN(prop)){layer[i]=parseInt(prop);}else{layer[i]=prop;}}
layer.width=this.mapWidth;layer.height=this.mapHeight;layer.preRender();this.layerList.push(layer);},addObjectLayer:function(currentLayer){var layer=new ObjectLayer();for(var nDataCount=0;nDataCount<currentLayer.objects.length;nDataCount+=1){var currObj=currentLayer.objects[nDataCount];var object=new window[currObj.type](this.tools);object.x=currObj.x;object.y=currObj.y;object.width=currObj.width;object.height=currObj.height;for(i in currObj.properties){var prop=currObj.properties[i];if(!isNaN(prop)){object[i]=parseInt(prop);}else{object[i]=prop;}}
layer.addObject(currObj.name,object);}
layer.__id=currentLayer.name;for(var i in currentLayer.properties){var prop=currentLayer.properties[i];if(!isNaN(prop)){layer[i]=parseInt(prop);}else{layer[i]=prop;}}
this.layerList.push(layer);}});;var CollisionManager=IModule.extend({collideSubscriptions:[],addSubscription:function(notification){this.collideSubscriptions.push({object:notification.obj,functionToAlert:notification.callback});},remove:function(notification){if(typeof notification.data==='string'){var oCurrentGameObject=null;var nObjectCount=0;var nGameObjectsLength=this.collideSubscriptions.length;for(nObjectCount=0;nObjectCount<nGameObjectsLength;nObjectCount+=1){oCurrentGameObject=this.collideSubscriptions[nObjectCount];if(oCurrentGameObject.object.__id===notification.data){this.collideSubscriptions.splice(nObjectCount,1);}}}},loadModule:function(tools){this.tools=tools;tools.messageContainer.listen(["#collisionSubs#"],this.addSubscription,this);tools.messageContainer.listen(["#checkCollisions#"],this.checkCollisions,this);tools.messageContainer.listen(["#objRemoved#"],this.remove,this);},checkCollisions:function(notification){for(var obj1 in this.collideSubscriptions){var result=[];var object1=this.collideSubscriptions[obj1].object;object1.collision.releaseCollisions();for(var obj2 in this.collideSubscriptions){var object2=this.collideSubscriptions[obj2].object;if(object1.__id!==object2.__id){var col=this.collide(object1,object2)
if(col!=null){result.push(col);}}}
object1[this.collideSubscriptions[obj1].functionToAlert](result);}},collide:function(obj1,obj2){if(obj1.collisionType==='Rectangle'&&obj2.collisionType==='Rectangle'){if(this.tools.collisionUtils.rectCollideRect(obj1,obj2)){return obj2;}}
if((obj1.collisionType==='Circle')&&(obj2.collisionType==='Circle')){if(this.tools.collisionUtils.circleCollideCircle(obj1,obj2)){return obj2;}}
if(obj1.collisionType==='Circle'&&obj2.collisionType==='Rectangle'){if(this.tools.collisionUtils.circleCollideRect(obj1,obj2)){return obj2;}}
if(obj1.collisionType==='Rectangle'&&obj2.collisionType==='Circle'){if(this.tools.collisionUtils.circleCollideRect(obj2,obj1)){return obj2;}}
return null;}});var DebugModule=IModule.extend({dbgContainer:null,gameInfo:null,objList:null,colList:null,selectedObj1:null,selectedObj2:null,debugging:null,loadModule:function(tools){this.tools=tools;tools.messageContainer.listen(["#dbgObjInfo#"],this.getObjectInfo,this);tools.messageContainer.listen(["#start#"],this.start,this);tools.messageContainer.listen(["#draw#"],this.startChecking,this);},start:function(){if(this.tools.settings.debug){this.constructDbgView();}},getObjectInfo:function(notification){var obj=this.tools.game.getLayer('objects').getObject(notification.data);var txt="<div class='object' id='object_cont"+notification.id+"' id='"+notification.data+"'>";if(obj!==null){txt+=obj.toString();}
txt+='</div>';$('#dbg_container .object_cont').children('#object_cont'+notification.id).remove();this.dbgContainer.children('.object_cont').append(txt);},constructDbgView:function(){this.cancelChecking();if(this.tools.game.getLayer('objects')!==null){this.objList=this.tools.game.getLayer('objects').objList;}
if(this.tools.game.getLayer('collisions')!==null){this.colList=this.tools.game.getLayer('collisions').objList;}
$('#game_info').remove();$('body').append('<div class="right_canvas" id="game_info"><label id="title">Game Info -</label></div>');this.gameInfo=$('#game_info');$('#dbg_container').remove();$('body').append('<div class="bottom_canvas" id="dbg_container"><label id="title">Object Dbg - </label></div>');this.dbgContainer=$('#dbg_container');this.dbgContainer.append('<div class="buttons">'+'<input type="button" value="Trace!" id="launchDBG"/>'+'<input type="button" value="Stop!" id="cancelDBG"/>'+'<input type="button" value="Show!" id="showDBG"/>'+'<input type="button" value="Pause!" id="pauseGame"/>'+'<input type="button" value="UpdateDbg!" id="updateDBG"/>'+'</div>');var select='<option></option>';for(var myKey in this.objList){select+='<option value="'+this.objList[myKey].__id+'">'+this.objList[myKey].__id+'</option>'}
select+='</select>';this.dbgContainer.append('<div class="object_combos">'+'<label>Obj1 - </label><select id="object_selc1">'+select+'<label>Obj2 - </label><select id="object_selc2">'+select+'</div>');this.dbgContainer.append("<div  class='object_cont'></div>");var txt="";txt+='<span><b>Game Layers:</b> '+this.tools.game.layerList.count()+'</span>'
if(this.objList!==null){txt+='<span><b>Game Objects:</b> '+this.objList.length+'</span>';}
if(this.colList!==null){txt+='<span><b>Collidable Objects:</b> '+this.colList.length+'</span>';}
txt+='<span><b>Draw Collisions</b></span> <select id="drawColRect"><option value="1">No</option><option value="0">Yes</option></select>';this.gameInfo.append('<div class="info">'+txt+'</div>');if(this.tools.game.moduleList.length!==0){var txt="<span><b>Modules </b></span>";for(var modK in this.tools.game.moduleList){txt+='<span>'+this.tools.game.moduleList[modK].__id+'</span>';}
this.gameInfo.append('<div class="info">'+txt+'</div>');}
var mapList='<option></option>';for(var myKey in this.tools.mapList){var selected="";if(myKey==this.tools.game.actualMap){selected="selected";}
mapList+='<option value="'+myKey+'" '+selected+'>'+myKey+'</option>'}
mapList+='</select>';this.gameInfo.append('<div class="info"><span><b>Mapas</b></span>'+'<div class="info"><span><b>Actual</b></span>'+'<select id="map_sel">'+mapList+'</div>');this.dbgContainer.append('<div class="clear"></div>');var self=this;$('#map_sel').change(function(){self.tools.messageContainer.speak({message:"#loadMap#",mapName:$(this).val()});});$('#object_selc1').change(function(){self.selectedObj1=$(this).val();});$('#object_selc2').change(function(){self.selectedObj2=$(this).val();});$('#drawColRect').change(function(){if($(this).val()==="0"){self.updOrSetSetting('drawCollisionRects',true);}else{self.updOrSetSetting('drawCollisionRects',false);}});var buttonStart=$('#launchDBG');var buttonEnd=$('#cancelDBG');var buttonShow=$('#showDBG');var buttonPause=$('#pauseGame');var buttonUpd=$('#updateDBG');var buttonkill=$('#killLink');buttonStart.click(function(){self.debugging=true;});buttonEnd.click(function(){self.cancelChecking();});buttonShow.click(function(){self.debugging=true;setTimeout(function(){self.debugging=false;},10)});buttonPause.click(function(){if($(this).val()==='Pause!'){self.debugging=false;self.tools.game.pauseGame();$(this).val('Resume!');}else{self.debugging=true;self.tools.game.resumeGame();$(this).val('Pause!');}});buttonUpd.click(function(){self.constructDbgView();});buttonkill.click(function(){self.tools.game.getLayer('objects').getObject('fp').kill('test');});},updOrSetSetting:function(key,value){this.tools.game.updOrSetSetting(key,value);},startChecking:function(){var self=this;if(this.debugging){self.tools.messageContainer.speak({message:"#dbgObjInfo#",data:self.selectedObj1,id:1});self.tools.messageContainer.speak({message:"#dbgObjInfo#",data:self.selectedObj2,id:2});}},cancelChecking:function(){this.debugging=false;$('#dbg_container .object_cont').children('.object').remove();}})